{
	"info": {
		"_postman_id": "2d9074bb-8981-4ee4-a0b0-e1cb4bf425d9",
		"name": "Test Explore With Me - feature comments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26121869"
	},
	"item": [
		{
			"name": "Comments",
			"item": [
				{
					"name": "Добавляем комментарий тез текста - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавляем новый комментарий  id 1   - Code201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"не понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавляем новый комментарий  id 2   - Code201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 2').to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"не понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/2/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"2",
								"events",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Корректируем комментарий id 1   - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение комментария его создателем по несуществующему id  - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение комментария несуществующим пользователем - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение комментария по несуществующему событию - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение комментария не по тому событию, к которому комментарий оставлен - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Изменение чужого комментария  - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"передумал. понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Корректируем комментарий - тез текста - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос комментария по его id  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос комментария по немуществующему id  - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев по id события  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});\r",
									"pm.test(\"Test comment[0] 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев по несуществующему id события  - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев - некорректное знаяение size - Code500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(500); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/1?size=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"1"
							],
							"query": [
								{
									"key": "size",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев - некорректное значение from - Code500",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(500); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/1?from=-1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"1"
							],
							"query": [
								{
									"key": "from",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария его создателем по несуществующему id  - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=999",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "999"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария несуществующим пользователем - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/999/events/1?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"999",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария по несуществующему событию - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/999?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"999"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария не по тому событию, к которому комментарий оставлен - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/2?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"2"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление чужого комментария  - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/2/events/1?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"2",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария его создателем   - Code204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1?commentId=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							],
							"query": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос комментария после его удаления  - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария админом - комментарий не принадлежит данному событию - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/events/1/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								"1",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление комментария админом  - Code204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/events/2/comments/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"events",
								"2",
								"comments",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев по событию id 1  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 01').to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка комментариев по событию id 2  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 01').to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/comments/events/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"events",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ban-list",
			"item": [
				{
					"name": "Добавляем комментатора в бан  - Code201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 3').to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/commentator/1?termInDays=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"commentator",
								"1"
							],
							"query": [
								{
									"key": "termInDays",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавляем несуществующего комментатора в бан   - Code404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404); \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/commentator/999?termInDays=1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"commentator",
								"999"
							],
							"query": [
								{
									"key": "termInDays",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавляем новый комментарий  от заблокированного пользователя   - Code400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(400); \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"не понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/1/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"1",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос полного списка заблокированных  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 3').to.eql(3);\r",
									"});\r",
									"pm.test(\"Test comment[0] 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка активных заблокированных  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});\r",
									"pm.test(\"Test comment[0] 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"    pm.expect(jsonData[0].id, '\"id\" must be 3').to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/active",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка заблокированных, у которых закончился срок блокировки - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 2').to.eql(2);\r",
									"});\r",
									"pm.test(\"Test comment[0] 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"    pm.expect(jsonData[0].id, '\"id\" must be 1').to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/overdue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"overdue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление из бана комментатора, у которых закончился срок блокировки - Code204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/commentator/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"commentator",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление из бана комментатора, у которых НЕ закончился срок блокировки - Code204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/commentator/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"commentator",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавляем комментарий  от пользователя, у которого закончился срок блокировки   - Code201 (автоматически удаляется из бан-листа)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"Test comment 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    pm.expect(jsonData.id, '\"id\" must be 3').to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"text\": \"не понравилось\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/comments/users/2/events/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"comments",
								"users",
								"2",
								"events",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос полного списка заблокированных  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 1').to.eql(1);\r",
									"});\r",
									"pm.test(\"Test comment[0] 'id' field\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.have.property('id');\r",
									"    pm.expect(jsonData[0].id, '\"id\" must be 2').to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Удаление ВСЕХ комментаторов, чья юлокировка закончилась из списка - Code204",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(204); \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/overdue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"overdue"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос полного списка заблокированных  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка активных заблокированных  - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/active",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"active"
							]
						}
					},
					"response": []
				},
				{
					"name": "Запрос списка заблокированных, у которых закончился срок блокировки - Code200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200); \r",
									"});\r",
									"pm.test(\"Has comment create response\", function () {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"pm.test(\"The response body is an array\", function () {\r",
									"    const body = pm.response.json();\r",
									"    pm.expect(body).is.an('array');\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length, 'List length must be 0').to.eql(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/admin/ban/overdue",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"admin",
								"ban",
								"overdue"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}